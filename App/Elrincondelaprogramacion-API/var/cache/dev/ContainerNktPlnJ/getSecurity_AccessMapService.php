<?php

namespace ContainerNktPlnJ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_AccessMapService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'security.access_map' shared service.
     *
     * @return \Symfony\Component\Security\Http\AccessMap
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/AccessMapInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/AccessMap.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-foundation/RequestMatcherInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-foundation/RequestMatcher.php';

        $container->privates['security.access_map'] = $instance = new \Symfony\Component\Security\Http\AccessMap();

        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/login'), [0 => 'IS_AUTHENTICATED_ANONYMOUSLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/register'), [0 => 'IS_AUTHENTICATED_ANONYMOUSLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/categories'), [0 => 'IS_AUTHENTICATED_ANONYMOUSLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/posts'), [0 => 'IS_AUTHENTICATED_ANONYMOUSLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/posts/[a-zA-ZñÑáéíóúÁÉÍÓÚ ]+'), [0 => 'IS_AUTHENTICATED_ANONYMOUSLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/posts/[0-9]+/comments'), [0 => 'IS_AUTHENTICATED_ANONYMOUSLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/posts/categories/[a-zA-ZñÑáéíóúÁÉÍÓÚ ]+'), [0 => 'IS_AUTHENTICATED_ANONYMOUSLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/roles'), [0 => 'IS_AUTHENTICATED_ANONYMOUSLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/[0-9]+/comment/create'), [0 => 'IS_AUTHENTICATED_FULLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/users/[0-9]+/update'), [0 => 'IS_AUTHENTICATED_FULLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/users/[0-9]+/update-role'), [0 => 'ROLE_ADMIN'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/profile-images/[a-zA-ZñÑáéíóúÁÉÍÓÚ ]+'), [0 => 'IS_AUTHENTICATED_FULLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/users/[0-9]+'), [0 => 'IS_AUTHENTICATED_FULLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/users/[0-9]+/comments'), [0 => 'IS_AUTHENTICATED_FULLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/users'), [0 => 'ROLE_ADMIN'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/profile-image/upload'), [0 => 'IS_AUTHENTICATED_FULLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/users/[0-9]+/ban'), [0 => 'ROLE_ADMIN'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/logout'), [0 => 'IS_AUTHENTICATED_FULLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/[category]'), [0 => 'ROLE_ADMIN'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/categories/[0-9]+/update'), [0 => 'ROLE_ADMIN'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/categories/[0-9]+/delete'), [0 => 'ROLE_ADMIN'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/post/create'), [0 => 'ROLE_ADMIN', 1 => 'ROLE_WRITER'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/posts/[0-9]+/update'), [0 => 'ROLE_ADMIN', 1 => 'ROLE_WRITER'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/post-image/upload'), [0 => 'ROLE_ADMIN', 1 => 'ROLE_WRITER'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/posts-images/[a-zA-ZñÑáéíóúÁÉÍÓÚ ]+'), [0 => 'IS_AUTHENTICATED_FULLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/posts/[0-9]+/inadequate'), [0 => 'ROLE_ADMIN'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/postss/inadequates'), [0 => 'ROLE_ADMIN'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/posts/[0-9]+/delete'), [0 => 'ROLE_ADMIN'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/comments/[0-9]+/update'), [0 => 'IS_AUTHENTICATED_FULLY'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/comments/[0-9]+/inadequate'), [0 => 'ROLE_ADMIN'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/comments/inadequates'), [0 => 'ROLE_ADMIN'], 'https');
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/comments/[0-9]+/delete'), [0 => 'IS_AUTHENTICATED_FULLY'], 'https');

        return $instance;
    }
}
