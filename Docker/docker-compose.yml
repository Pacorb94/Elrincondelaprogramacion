version: '3.5'

#Red que compartirán todos los contenedores
networks:
    nginx-php-mysql:

services:

    #Frontend
    nginx-front-service:
        image: nginx:stable-alpine
        container_name: nginx-front-container
        #Usamos 2 puertos (máquina host:contenedor) ya que si sólo ponemos 443 no se podrá redirigir del 80 al 443
        ports:
            - "8080:80"
            - "8081:443"
        #Lo que esté en la izquierda se renombrará a lo que esté en la derecha
        volumes:
            - ../App/Elrincondelaprogramacion/dist/Elrincondelaprogramacion:/var/www/Proyecto
            - ./Nginx/elrincondelaprogramacion.com:/etc/nginx/conf.d/default.conf
            - /etc/ssl/certificates/:/etc/nginx/certificates/
        #Primero se iniciará mysql, luego php y finalmente nginx-back-service
        depends_on:
            - nginx-back-service
            - php-service
            - mysql-service
        networks:
            - nginx-php-mysql

    #Backend
    nginx-back-service:
        image: nginx:stable-alpine
        container_name: nginx-back-container
        ports:
            - "9080:80"
            - "9081:443"
        volumes:
            - ../App/Elrincondelaprogramacion-API:/var/www/Proyecto
            - ./Nginx/api.elrincondelaprogramacion.com:/etc/nginx/conf.d/default.conf
            - /etc/ssl/certificates/:/etc/nginx/certificates/
        depends_on:
            - php-service
            - mysql-service
        networks:
            - nginx-php-mysql

    #PHP
    php-service:
        #Podemos también construir la imagen nosotros con un archivo dockerfile
        build:
            context: .
            dockerfile: ./Php/dockerfile
        container_name: php-container
        ports:
            - "9000:9000"
        networks:
            - nginx-php-mysql

    #MySQL
    mysql-service:
        image: mysql:8.0
        container_name: mysql-container
        ports:
            - "4306:3306"
        volumes:
            - ./Mysql:/var/lib/mysql
        #Comando que se ejecutará dentro
        command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        #Se reiniciará el contenedor a menos que se pare manualmente
        restart: always
        #Variables de entorno
        environment:
            MYSQL_USER: root
            MYSQL_ROOT_PASSWORD: ''
            MYSQL_PASSWORD: ''
        networks:
            - nginx-php-mysql
